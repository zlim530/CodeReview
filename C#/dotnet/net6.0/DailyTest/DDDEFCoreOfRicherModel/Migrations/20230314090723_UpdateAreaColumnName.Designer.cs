// <auto-generated />
using System;
using DDDEFCoreOfRicherModel.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDEFCoreOfRicherModel.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230314090723_UpdateAreaColumnName")]
    partial class UpdateAreaColumnName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DDDEFCoreOfRicherModel.Models.Region", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<long?>("Population")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("T_Regions", (string)null);
                });

            modelBuilder.Entity("DDDEFCoreOfRicherModel.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("passwordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("T_Users", (string)null);
                });

            modelBuilder.Entity("DDDEFCoreOfRicherModel.Models.Region", b =>
                {
                    b.OwnsOne("DDDEFCoreOfRicherModel.ValueObject.Area", "Area", b1 =>
                        {
                            b1.Property<long>("RegionId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasMaxLength(20)
                                .IsUnicode(false)
                                .HasColumnType("varchar(20)");

                            b1.Property<double>("Value")
                                .HasColumnType("float")
                                .HasColumnName("AreaSize")
                                .HasComment("区域大小");

                            b1.HasKey("RegionId");

                            b1.ToTable("T_Regions");

                            b1.WithOwner()
                                .HasForeignKey("RegionId");
                        });

                    b.OwnsOne("DDDEFCoreOfRicherModel.ValueObject.Geo", "Location", b1 =>
                        {
                            b1.Property<long>("RegionId")
                                .HasColumnType("bigint");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("RegionId");

                            b1.ToTable("T_Regions");

                            b1.WithOwner()
                                .HasForeignKey("RegionId");
                        });

                    b.OwnsOne("DDDEFCoreOfRicherModel.ValueObject.MultilingualString", "Name", b1 =>
                        {
                            b1.Property<long>("RegionId")
                                .HasColumnType("bigint");

                            b1.Property<string>("Chinese")
                                .IsRequired()
                                .HasMaxLength(255)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(255)");

                            b1.Property<string>("English")
                                .IsUnicode(false)
                                .HasColumnType("varchar(255)");

                            b1.HasKey("RegionId");

                            b1.ToTable("T_Regions");

                            b1.WithOwner()
                                .HasForeignKey("RegionId");
                        });

                    b.Navigation("Area")
                        .IsRequired();

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
