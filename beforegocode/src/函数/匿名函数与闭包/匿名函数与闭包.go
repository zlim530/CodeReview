package main

import (
	"fmt"
)

/*
	所谓闭包就是一个函数“捕获”了和它在同一作用域的其它常量和变量。
	这就意味着当闭包被调用的时候，不管在程序什么地方调用，
	闭包能够使用这些常量或者变量。
	它不关心这些捕获了的变量和常量是否已经超出了作用域，
	所以只有闭包还在使用它，这些变量就还会存在。

在Go语言里，所有的匿名函数(Go语言规范中称之为函数字面量)都是闭包。
匿名函数是指不需要定义函数名的一种函数实现方式

*/

/*
闭包捕获外部变量的特点：
它会直接获得外部变量的地址
故它对外部变量进行修改 会影响变量本身
*/
func main() {
	i := 10
	str := "mike"

	func() {
		i = 100
		str = "golang"
	}()

	fmt.Println(i, str)
}
